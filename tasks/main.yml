---
- include_vars:
    file: vars/availability-zones.yml
    name: aws_availability_zones
  tags:
    - configuration
    - state
- include_vars:
    file: vars/cluster-hostnames.yml
    name: cluster_hostnames
  tags:
    - configuration
    - state

- set_fact:
    tf_dir: "{{ terraform_data_dir }}/{{ organization_name }}/{{ project_type }}/{{ project_name }}/{{ project_deployment_environment }}"
  tags:
    - configuration
    - state
    - apply

- name: Create terraform data directory
  file:
    path: "{{ tf_dir }}"
    state: directory
  tags: configuration

# - shell: env
#   tags: configuration

# - name: Clean modules path
#   file:
#     state: absent
#     path: "{{ tf_dir }}/modules"
#   tags: configuration

- name: Copy terraform files to host
  copy:
    src: "terraform_files/"
    dest: "{{ tf_dir }}/"
    force: yes
  tags: configuration

- name: Create TF main
  template:
    src: main.tf.j2
    dest: "{{ tf_dir }}/main.tf"
  tags: configuration

- name: Create TF variables
  template:
    src: variables.tf.j2
    dest: "{{ tf_dir }}/variables.tf"
  tags: configuration

- name: Create TF outputs
  template:
    src: outputs.tf.j2
    dest: "{{ tf_dir }}/outputs.tf"
  tags: configuration

- name: Create requirements.txt
  template:
    src: requirements.txt.j2
    dest: "{{ tf_dir }}/requirements.txt"
  tags: configuration

- name: Create makefile
  template:
    src: Makefile.j2
    dest: "{{ tf_dir }}/Makefile"
  tags: configuration
- block:
  - name: Run the terraform initialization
    command: "terraform init -no-color"
    tags: configuration
    args:
      chdir: "{{ tf_dir }}"

  - name: Run the terraform update modules
    command: "terraform get -update -no-color"
    tags: configuration  
    args:
      chdir: "{{ tf_dir }}"

  - name: Import networking
    shell: make
    tags: state
    args:
      chdir: "{{ tf_dir }}"

  - name: Run the terraform plan
    command: "terraform plan -no-color {{ terraform_arg }}"
    tags: state
    args:
      chdir: "{{ tf_dir }}"

  - name: Run the installation on AWS
    command: "terraform apply -auto-approve -no-color {{ terraform_arg }}"
    tags: apply
    args:
      chdir: "{{ tf_dir }}"

  environment:
    AWS_DEFAULT_REGION: "{{ aws_region }}"

