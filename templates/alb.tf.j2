resource "aws_alb" "this" {
  name = "tf-ecs-{{ project_name }}-{{ project_deployment_environment }}-alb"
  security_groups = [ "${aws_security_group.alb.id}" ]

  # Keep these arguments as is:

  {% if aws_vpc_default == 'true' %}
        subnets = [ "${aws_default_subnet.a.id}" , "${aws_default_subnet.b.id}" , "${aws_default_subnet.c.id}"]
  {% else %}
        subnets = [ "{{ aws_subnet_id_a }}" , "{{ aws_subnet_id_b }}" , "{{ aws_subnet_id_c }}"]
  {% endif %}
  internal = false
}

resource "aws_security_group" "alb" {
  name        = "tf-alb-sg-{{ project_name }}-{{ project_deployment_environment }}"

{% if aws_vpc_default == 'true' %}
  vpc_id = "${aws_default_vpc.this.id}"
{% else %}
  vpc_id = "{{ aws_vpc_id }}"
{% endif %}

  ingress {
      from_port = 443
      to_port = 443
      protocol = "tcp"
      cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags {
    Name = "tf-alb-sg-{{ project_name }}-{{ project_deployment_environment }}"
  }
}

resource "aws_alb_listener" "default" {
  load_balancer_arn = "${aws_alb.this.arn}"
  port = "443"
  protocol = "HTTPS"
  ssl_policy = "ELBSecurityPolicy-2016-08"
  certificate_arn = "${aws_acm_certificate.default.arn}"
  default_action {
    target_group_arn = "${aws_alb_target_group.this.arn}"
    type = "forward"
  }
}

resource "aws_alb_target_group" "this" {
  name = "tf-ecs-{{ project_name }}-{{ project_deployment_environment }}-alb-tg"
  port = 80
  protocol = "HTTP"
{% if aws_vpc_default == 'true' %}
  vpc_id = "${aws_default_vpc.this.id}"
{% else %}
  vpc_id = "{{ aws_vpc_id }}"
{% endif %}

  lifecycle {
    create_before_destroy = true
  }
}
