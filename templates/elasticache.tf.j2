resource "aws_elasticache_replication_group" "this" {
  replication_group_id          = "tf-{{ project_name }}-{{ project_deployment_environment }}"
  replication_group_description = "tf-elasticache-{{ organization_name }}-{{ project_type }}-{{ project_name }}-{{ project_deployment_environment }}"
  node_type                     = "{{ elasticache_node_type }}"
  number_cache_clusters         = {{ elasticache_num_cache_nodes }}
  port                          = {{ elasticache_port }}
  parameter_group_name          = "{{ elasticache_parameter_group_name }}"
  availability_zones = ["${data.aws_availability_zones.available.names[0]}", "${data.aws_availability_zones.available.names[1]}", "${data.aws_availability_zones.available.names[2]}"]
  subnet_group_name = "${aws_elasticache_subnet_group.this.name}"
  automatic_failover_enabled    = false
  security_group_ids = ["${aws_security_group.this.id}", "${aws_security_group.redis.id}"]
}

resource "aws_security_group" "redis" {
  name        = "tf-ecc-sg-redis-{{ organization_name }}-{{ project_type }}-{{ project_name }}-{{ project_deployment_environment }}"
  description = "{{ organization_name | title }} {{ project_type | title }} {{ project_name | title }} Elasticache {{ project_deployment_environment | title }}"

{% if aws_vpc_default == true %}
  vpc_id = "${aws_default_vpc.this.id}"
{% else %}
  vpc_id = "{{ aws_vpc_id }}"
{% endif %}

  ingress {
        from_port = 6379
        to_port = 6379
        protocol = "tcp"
        security_groups = ["${aws_security_group.this.id}"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags {
    Name = "tf-ecc-eg-redis-{{ organization_name }}-{{ project_type }}-{{ project_name }}-{{ project_deployment_environment }}"
  }
}

resource "aws_elasticache_subnet_group" "this" {
  name       = "tf-ecc-subnet-{{ organization_name }}-{{ project_type }}-{{ project_name }}-{{ project_deployment_environment }}"
{% if aws_vpc_default == true %}
  subnet_ids = ["${aws_default_subnet.a.id}", "${aws_default_subnet.b.id}", "${aws_default_subnet.c.id}"]
{% else %}
  subnet_ids = ["{{ aws_subnet_id_a }}" , "{{ aws_subnet_id_b }}" , "{{ aws_subnet_id_c }}"]
{% endif %}
}
