---
organization_name: "default" # should be redefined from AWX

aws_vpc_default: true
aws_vpc_id: ""
aws_subnet_id_a : ""
aws_subnet_id_b : ""
aws_subnet_id_c : ""


cloudfront_s3_origins:

tf_primitive:
  # - s3: website_bucket
  # - ecs:
  #     var:
  #       ssh_public_key: "{{ '~/.ssh/id_rsa.pub' | expanduser }}"
  # - eks:
  #     name: review
  # - rds:
  #     var: &rds_config
  #       db_name: database_name
  #       db_username: database_user
  #       db_password: secret
  # # - rds:
  # #     var:
  # #       db_name: database_name
  # #       db_username: database_user
  # #       db_password: secret
  # #       cluster: true
  # #       route53: true
  # - alb: true
  # - iam: true
  # - elasticache: true
  # - lambda: login
  # - cloudflare:
  #   var:
  #     rds: *rds_config
  #     elasticache: false
  # - route53:
  #     var:
  #       alb: true
  #       s3: true

project_name: name
project_type: project
project_deployment_environment: develop

tf_primitive_default:
  s3:
    var:
      bucket_name: tf-s3-test
      bucket_policy_path: s3/policy/static_iam_user_policy.tf.j2
      lambda: false
  ecs:
    var:
      min_size: 0
      max_size: 1
      desired_capacity: 1
      instance_type: t2.micro
      block_device_size: 22
      nginx_conf_b64: ""
      ingress: []
    templates:
      - ecs/main.tf.j2
      - ecs/security_groups.tf.j2
  rds:
    name: rds_instance
    var:
      instance_type: db.t2.micro
      engine: mysql
      engine_version: "5.6.37"
      allocated_storage_size: 10
      storage_type: gp2
      cluster: false
      route53: false
      skip_final_snapshot: false
    tf:
      count: 2
    templates:
      - rds/main.tf.j2
      - rds/route53.tf.j2
  alb:
    var:
      ingress: []
    templates:
      - alb/main.tf.j2
      - alb/security_groups.tf.j2
  elasticache:
    var:
      num_cache_nodes: 1
      port: 6379
      parameter_group_name:
      engine: redis
      node_type: cache.t2.small
      route53: false
  networking:
    var:
      default: true
      cidr: 172.30.0.0/16
      region: "{{ aws_region }}"
      personalization:
        - "{{ organization_name }}"
    tags:
      organization: "{{ organization_name }}"
      environment: "{{ project_deployment_environment }}"
    tf:
      lifecycle:
        prevent_destroy: true
        ignore_changes:
          - tags
  master:
    var:
      region: "{{ aws_region }}"
      datacenter: "${data.aws_region.current.name}"
      consul_domain: "{{ project_env_zone }}"
      instance_type: t2.micro
      networking: default
      consul_ui: true
      vault_ui: true
      workers_per_zone: 1
      reachability: public
      with_public_ip: true
      key:
        public: "{{ '~/.ssh/id_rsa.pub' | expanduser }}"
        private: "{{ '~/.ssh/id_rsa' | expanduser }}"
  eks:
    var:
      instance_type: t2.medium
      networking: default
      region: "{{ aws_region }}"
      consul_domain: "{{ project_env_zone }}"
      workers_per_zone: 1
      datacenter: "${aws_region.current.name}"

tf_variable_defaults:
  reachabilities:
    default:
      - private
      - public

tf_module_path: modules

# project_s3: false
# project_ecs: false
# project_eks: false
# project_alb: false
# project_iam: false
# project_rds: false
# project_rds_cluster: false
# project_elasticache: false
project_env_zone: "example.com"
project_zone_cloudflare: false
project_zone_rds_cluster: false
project_zone_route53: false

main_dns_record_create: true
skip_env_domain_prefix: false
skip_project_name_domain_prefix: false

cloudfront_default_root_object: ""

iam_user_policy_name: "test_s3_bucket_policy.json.j2"

db_skip_final_snapshot: true

terraform_dir: "/opt/terraform"
terraform_arg: ""
terraform_data_dir: "/opt/terraform/data"
